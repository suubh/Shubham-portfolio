{"version":3,"sources":["../../../src/internal-plugins/internal-data-bridge/gatsby-node.js"],"names":["moment","require","chokidar","systemPath","_","emitter","store","actions","getNode","transformPackageJson","json","transformDeps","deps","entries","map","name","version","pick","dependencies","devDependencies","peerDependencies","optionalDependecies","bundledDependecies","createPageId","path","exports","sourceNodes","createContentDigest","getNodesByType","createNode","deleteNode","program","flattenedPlugins","config","getState","page","id","parent","children","internal","type","contentDigest","forEach","plugin","pluginFilepath","resolve","packageJson","createGatsbyConfigNode","configCopy","plugins","node","siteMetadata","port","proxyPort","host","buildTime","subtract","process","uptime","startOf","toJSON","metadataNode","pathToGatsbyConfig","join","directory","watchConfig","env","GATSBY_EXPERIMENTAL_FUNCTIONS","functions","createFunctionNode","absoluteCompiledFilePath","on","action","existingNodes","newFunctionsSet","Set","payload","add","toBeDeleted","filter","has","apiRoute","watch","oldCache","cache","e","undefined","createResolvers","resolvers","Site","source","args","context","info","nodeModel","getNodeById","originalResolver","onCreatePage","updatedAt","pageWithoutUpdated","description","pluginCreatorId","nodeId","dispatch"],"mappings":"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","sourcesContent":["const moment = require(`moment`)\nconst chokidar = require(`chokidar`)\nconst systemPath = require(`path`)\nconst _ = require(`lodash`)\n\nconst { emitter, store } = require(`../../redux`)\nconst { actions } = require(`../../redux/actions`)\nconst { getNode } = require(`../../redux/nodes`)\n\nfunction transformPackageJson(json) {\n  const transformDeps = deps =>\n    _.entries(deps).map(([name, version]) => {\n      return {\n        name,\n        version,\n      }\n    })\n\n  json = _.pick(json, [\n    `name`,\n    `description`,\n    `version`,\n    `main`,\n    `keywords`,\n    `author`,\n    `license`,\n    `dependencies`,\n    `devDependencies`,\n    `peerDependencies`,\n    `optionalDependecies`,\n    `bundledDependecies`,\n  ])\n  json.dependencies = transformDeps(json.dependencies)\n  json.devDependencies = transformDeps(json.devDependencies)\n  json.peerDependencies = transformDeps(json.peerDependencies)\n  json.optionalDependecies = transformDeps(json.optionalDependecies)\n  json.bundledDependecies = transformDeps(json.bundledDependecies)\n\n  return json\n}\n\nconst createPageId = path => `SitePage ${path}`\n\nexports.sourceNodes = ({\n  createContentDigest,\n  getNodesByType,\n  actions,\n  store,\n}) => {\n  const { createNode, deleteNode } = actions\n  const { program, flattenedPlugins, config } = store.getState()\n\n  // Add our default development page since we know it's going to\n  // exist and we need a node to exist so its query works :-)\n  const page = { path: `/dev-404-page/` }\n  createNode({\n    ...page,\n    id: createPageId(page.path),\n    parent: null,\n    children: [],\n    internal: {\n      type: `SitePage`,\n      contentDigest: createContentDigest(page),\n    },\n  })\n\n  flattenedPlugins.forEach(plugin => {\n    plugin.pluginFilepath = plugin.resolve\n    createNode({\n      ...plugin,\n      packageJson: transformPackageJson(\n        require(`${plugin.resolve}/package.json`)\n      ),\n      parent: null,\n      children: [],\n      internal: {\n        contentDigest: createContentDigest(plugin),\n        type: `SitePlugin`,\n      },\n    })\n  })\n\n  // Add site node.\n\n  const createGatsbyConfigNode = (config = {}) => {\n    // Delete plugins from the config as we add plugins above.\n    const configCopy = { ...config }\n    delete configCopy.plugins\n    const node = {\n      siteMetadata: {\n        ...configCopy.siteMetadata,\n      },\n      port: program.proxyPort,\n      host: program.host,\n      ...configCopy,\n    }\n    createNode({\n      ...node,\n      id: `Site`,\n      parent: null,\n      children: [],\n      internal: {\n        contentDigest: createContentDigest(node),\n        type: `Site`,\n      },\n    })\n  }\n\n  createGatsbyConfigNode(config)\n\n  const buildTime = moment()\n    .subtract(process.uptime(), `seconds`)\n    .startOf(`second`)\n    .toJSON()\n\n  const metadataNode = { buildTime }\n\n  createNode({\n    ...metadataNode,\n    id: `SiteBuildMetadata`,\n    parent: null,\n    children: [],\n    internal: {\n      contentDigest: createContentDigest(metadataNode),\n      type: `SiteBuildMetadata`,\n    },\n  })\n\n  const pathToGatsbyConfig = systemPath.join(\n    program.directory,\n    `gatsby-config.js`\n  )\n  watchConfig(pathToGatsbyConfig, createGatsbyConfigNode)\n\n  // Create nodes for functions\n  if (process.env.GATSBY_EXPERIMENTAL_FUNCTIONS) {\n    const { functions } = store.getState()\n    const createFunctionNode = config => {\n      createNode({\n        id: `gatsby-function-${config.absoluteCompiledFilePath}`,\n        ...config,\n        parent: null,\n        children: [],\n        internal: {\n          contentDigest: createContentDigest(config),\n          type: `SiteFunction`,\n        },\n      })\n    }\n    functions.forEach(config => {\n      createFunctionNode(config)\n    })\n\n    // Listen for updates to functions to update the nodes.\n    emitter.on(`SET_SITE_FUNCTIONS`, action => {\n      // Identify any now deleted functions and remove their nodes.\n      const existingNodes = getNodesByType(`SiteFunction`)\n      const newFunctionsSet = new Set()\n      action.payload.forEach(config =>\n        newFunctionsSet.add(\n          `gatsby-function-${config.absoluteCompiledFilePath}`\n        )\n      )\n      const toBeDeleted = existingNodes.filter(\n        node => !newFunctionsSet.has(node.id)\n      )\n      toBeDeleted.forEach(node => deleteNode(node))\n\n      action.payload.forEach(config => {\n        createFunctionNode(config)\n      })\n    })\n  } else {\n    // If not enabled, create a dummy node so we can ignore it in the dev 404 page\n    const config = { apiRoute: `FAKE`, absoluteCompiledFilePath: `FAKE` }\n    createNode({\n      id: `gatsby-function-${config.absoluteCompiledFilePath}`,\n      ...config,\n      parent: null,\n      children: [],\n      internal: {\n        contentDigest: createContentDigest(config),\n        type: `SiteFunction`,\n      },\n    })\n  }\n}\n\nfunction watchConfig(pathToGatsbyConfig, createGatsbyConfigNode) {\n  chokidar.watch(pathToGatsbyConfig).on(`change`, () => {\n    const oldCache = require.cache[require.resolve(pathToGatsbyConfig)]\n    try {\n      // Delete require cache so we can reload the module.\n      delete require.cache[require.resolve(pathToGatsbyConfig)]\n      const config = require(pathToGatsbyConfig)\n      createGatsbyConfigNode(config)\n    } catch (e) {\n      // Restore the old cache since requiring the new gatsby-config.js failed.\n      if (oldCache !== undefined) {\n        require.cache[require.resolve(pathToGatsbyConfig)] = oldCache\n      }\n    }\n  })\n}\n\nexports.createResolvers = ({ createResolvers }) => {\n  const resolvers = {\n    Site: {\n      buildTime: {\n        type: `Date`,\n        resolve(source, args, context, info) {\n          const { buildTime } = context.nodeModel.getNodeById({\n            id: `SiteBuildMetadata`,\n            type: `SiteBuildMetadata`,\n          })\n          return info.originalResolver(\n            {\n              ...source,\n              buildTime,\n            },\n            args,\n            context,\n            info\n          )\n        },\n      },\n    },\n  }\n  createResolvers(resolvers)\n}\n\nexports.onCreatePage = ({ createContentDigest, page, actions }) => {\n  const { createNode } = actions\n  // eslint-disable-next-line\n  const { updatedAt, ...pageWithoutUpdated } = page\n\n  // Add page.\n  createNode({\n    ...pageWithoutUpdated,\n    id: createPageId(page.path),\n    parent: null,\n    children: [],\n    internal: {\n      type: `SitePage`,\n      contentDigest: createContentDigest(pageWithoutUpdated),\n      description:\n        page.pluginCreatorId === `Plugin default-site-plugin`\n          ? `Your site's \"gatsby-node.js\"`\n          : page.pluginCreatorId,\n    },\n  })\n}\n\n// Listen for DELETE_PAGE and delete page nodes.\nemitter.on(`DELETE_PAGE`, action => {\n  const nodeId = createPageId(action.payload.path)\n  const node = getNode(nodeId)\n  store.dispatch(actions.deleteNode(node))\n})\n"],"file":"gatsby-node.js"}