{"version":3,"sources":["src/gatsby-node.js"],"names":["publicPath","defaultEnv","defaultOptions","output","query","writeFile","file","data","Promise","resolve","reject","fs","err","runQuery","handler","then","res","errors","Error","join","getOptions","pluginOptions","options","plugins","env","resolveEnv","process","GATSBY_ACTIVE_ENV","NODE_ENV","envOptions","onPostBuild","graphql","userOptions","mergedOptions","Object","prototype","hasOwnProperty","call","site","siteMetadata","siteUrl","host","sitemap","url","policy","configFile","content","filename","path"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport robotsTxt from 'generate-robotstxt';\nimport path from 'path';\nimport url from 'url';\n\nconst publicPath = './public';\nconst defaultEnv = 'development';\nconst defaultOptions = {\n  output: '/robots.txt',\n  query: `{\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }`\n};\n\nfunction writeFile(file, data) {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(file, data, err => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction runQuery(handler, query) {\n  return handler(query).then(res => {\n    if (res.errors) {\n      throw new Error(res.errors.join(', '));\n    }\n\n    return res.data;\n  });\n}\n\nconst getOptions = pluginOptions => {\n  const options = { ...pluginOptions };\n\n  delete options.plugins;\n\n  const { env = {}, resolveEnv = () => process.env.GATSBY_ACTIVE_ENV || process.env.NODE_ENV } = options;\n\n  const envOptions = env[resolveEnv()] || env[defaultEnv] || {};\n\n  delete options.env;\n  delete options.resolveEnv;\n\n  return { ...options, ...envOptions };\n};\n\nexport async function onPostBuild({ graphql }, pluginOptions) {\n  const userOptions = getOptions(pluginOptions);\n  const mergedOptions = { ...defaultOptions, ...userOptions };\n\n  if (\n    !Object.prototype.hasOwnProperty.call(mergedOptions, 'host') ||\n    !Object.prototype.hasOwnProperty.call(mergedOptions,'sitemap')\n  ) {\n    const {\n      site: {\n        siteMetadata: { siteUrl }\n      }\n    } = await runQuery(graphql, mergedOptions.query);\n\n    mergedOptions.host = siteUrl;\n    mergedOptions.sitemap = url.resolve(siteUrl, 'sitemap.xml');\n  }\n\n  const { policy, sitemap, host, output, configFile } = mergedOptions;\n\n  const content = await robotsTxt({\n    policy,\n    sitemap,\n    host,\n    configFile\n  });\n  const filename = path.join(publicPath, output);\n\n  return await writeFile(path.resolve(filename), content);\n}\n"],"file":"gatsby-node.js"}